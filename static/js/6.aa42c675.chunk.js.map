{"version":3,"file":"static/js/6.aa42c675.chunk.js","mappings":"0MAQA,MAyDA,EAzDeA,KACb,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KAChBC,EAAUC,EAAAA,EAASC,MAAMC,GAASA,EAAKC,KAAOC,SAASP,MACtDQ,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAEvCG,EAAAA,EAAAA,YAAU,KACJX,GAAWA,EAAQY,cAAcC,OAAS,GAC5CN,EAAgBP,EAAQY,cAC1B,GACC,CAACZ,IAEJ,MAAMc,EAAuBA,KAC3BJ,GAAW,EAAM,EAGnB,OAAKV,GAGHe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBF,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAAE,SACGjB,EAAQoB,eACPL,EAAAA,EAAAA,KAAA,OACEM,IAAKrB,EAAQoB,aACbE,IAAI,eACJH,UAAU,mCAIhBD,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGjB,EAAQuB,MAAM,aAASR,EAAAA,EAAAA,KAAA,QAAMI,UAAU,mBAGzCV,IAAWM,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAmBF,SAAC,wBAE/CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,eAAcF,SAC1BX,EAAakB,KAAI,CAACC,EAAOC,KACxBX,EAAAA,EAAAA,KAACY,EAAAA,cAAa,CAEZL,IAAG,iBAAAM,OAAmBF,EAAQ,GAC9BL,IAAKI,EAAMI,SACXC,OAAO,OACPC,OAAkB,IAAVL,EAAcZ,OAAuBkB,EAC7Cb,UAAU,eACVc,iBAAiB,8CACjBC,aAAc,CACZ,gBAAiB,2FARdR,aAvBIX,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qBAqCnB,C","sources":["Components/Gallary/Images.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Images.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { projects } from \"../Portfolio/ProtfolioData\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\nimport Portfolio from \"../Portfolio/Portfolio\";\r\n\r\nconst Images = () => {\r\n  const { projectId } = useParams();\r\n  const project = projects.find((proj) => proj.id === parseInt(projectId));\r\n  const [sortedImages, setSortedImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (project && project.galleryImages.length > 0) {\r\n      setSortedImages(project.galleryImages);\r\n    }\r\n  }, [project]);\r\n\r\n  const handleFirstImageLoad = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  if (!project) return <p>Project not found</p>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gallery-container\">\r\n        <div>\r\n          {project.headImageUrl && (\r\n            <img\r\n              src={project.headImageUrl}\r\n              alt=\"Header Image\"\r\n              className=\"gallery-container-headImage\"\r\n            />\r\n          )}\r\n        </div>\r\n        <h1>\r\n          {project.title} Gallery <span className=\"yellow-line\"></span>\r\n        </h1>\r\n\r\n        {loading && <div className=\"loading-indicator\">Loading gallery...</div>}\r\n\r\n        <div className=\"grid-gallery\">\r\n          {sortedImages.map((image, index) => (\r\n            <LazyLoadImage\r\n              key={index}\r\n              alt={`Gallery image ${index + 1}`}\r\n              src={image.original}\r\n              effect=\"blur\"\r\n              onLoad={index === 0 ? handleFirstImageLoad : undefined}\r\n              className=\"gallery-item\"\r\n              wrapperClassName=\"gallery-item-wrapper gallery-item-with-logo\"\r\n              wrapperProps={{\r\n                'data-logo-url': 'https://res.cloudinary.com/dmj6ur8sm/image/upload/v1750595644/osk6shpe0kkpxoaa0coc.png'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Images;"],"names":["Images","projectId","useParams","project","projects","find","proj","id","parseInt","sortedImages","setSortedImages","useState","loading","setLoading","useEffect","galleryImages","length","handleFirstImageLoad","_jsx","_Fragment","children","_jsxs","className","headImageUrl","src","alt","title","map","image","index","LazyLoadImage","concat","original","effect","onLoad","undefined","wrapperClassName","wrapperProps"],"sourceRoot":""}
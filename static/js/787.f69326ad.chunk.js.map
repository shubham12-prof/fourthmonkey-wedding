{"version":3,"file":"static/js/787.f69326ad.chunk.js","mappings":"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","sources":["Components/ContactUs/ContactForm.js","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport \"./ContactForm.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nfunction Contact() {\r\n  const form = useRef();\r\n  const [feedback, setFeedback] = useState({ message: \"\", type: \"\" });\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm(\r\n        \"service_ozftsvo\",\r\n        \"template_kklyk8w\",\r\n        form.current,\r\n        \"J3C_U_TwQhB1fJyfn\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(\"Message sent:\", result.text);\r\n          setFeedback({\r\n            message: \"Message sent successfully!\",\r\n            type: \"success\",\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"Error:\", error.text);\r\n          setFeedback({\r\n            message: \"Failed to send message. Please try again.\",\r\n            type: \"error\",\r\n          });\r\n        }\r\n      );\r\n\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <div className=\"contact-left\">\r\n        <h2>GET IN TOUCH</h2>\r\n        <p>Address :- 36, Phase 2. Engineers Enclave, GMS Road, Dehradun</p>\r\n        <p>ðŸ“ž +91 7247889013</p>\r\n        <p>ðŸ“§ weddings@fourthmunky.com</p>\r\n        <div className=\"social-icon\">\r\n          <a href=\"/\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"/\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n          </a>\r\n          <a href=\"/\">\r\n            <i className=\"fab fa-whatsapp\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"contact-right\">\r\n        <h2>SEND US A MESSAGE</h2>\r\n        <p>You can leave your queries here or just say Hello!</p>\r\n        <form ref={form} onSubmit={sendEmail}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"user_name\"\r\n            placeholder=\"Your name\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"user_email\"\r\n            placeholder=\"Your email\"\r\n            required\r\n          />\r\n          <input type=\"text\" name=\"subject\" placeholder=\"Subject\" />\r\n          <input type=\"tel\" name=\"user_phone\" placeholder=\"Phone Number\" />\r\n          <textarea\r\n            name=\"message\"\r\n            placeholder=\"Your message (optional)\"\r\n            rows=\"4\"\r\n          ></textarea>\r\n          <button type=\"submit\">SUBMIT</button>\r\n        </form>\r\n        {feedback.message && (\r\n          <div className={`feedback ${feedback.type}`}>{feedback.message}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["form","useRef","feedback","setFeedback","useState","message","type","_jsxs","className","children","_jsx","href","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","text","error","target","reset","name","placeholder","required","rows","concat","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append"],"sourceRoot":""}
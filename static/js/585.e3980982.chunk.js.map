{"version":3,"file":"static/js/585.e3980982.chunk.js","mappings":"wMAOA,MA8DA,EA9DeA,KACb,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KAChBC,EAAUC,EAAAA,EAASC,MAAMC,GAASA,EAAKC,KAAOC,SAASP,MACtDQ,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GA2BvC,OAzBAG,EAAAA,EAAAA,YAAU,KACR,GAAIX,GAAWA,EAAQY,cAAcC,OAAS,EAAG,CAC/C,MAAMC,EAAed,EAAQY,cAAcC,OAC3C,IAAIE,EAAc,EAClBf,EAAQY,cAAcI,SAASC,IAC7B,MAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,EAAMI,SAChBH,EAAII,OAAS,KACXP,IACIA,IAAgBD,IAClBP,EAAgBP,EAAQY,eACxBF,GAAW,GACb,EAEFQ,EAAIK,QAAU,KACZR,IACIA,IAAgBD,IAClBP,EAAgBP,EAAQY,eACxBF,GAAW,GACb,CACD,GAEL,IACC,CAACV,IAECA,GAGHwB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAoBC,MAAO,CAAEC,UAAW,QAASC,SAAA,EAC9DJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,CACG5B,EAAQ6B,MAAM,aAASC,EAAAA,EAAAA,KAAA,QAAML,UAAU,mBAGzChB,GACCqB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,oBAAmBG,SAAC,wBAEnCE,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcG,SAC1BtB,EAAayB,KAAI,CAACd,EAAOe,KACxB,MAAMC,EAAoB,IAAVD,EAChB,OACEF,EAAAA,EAAAA,KAACI,EAAAA,cAAa,CAEZC,IAAG,iBAAAC,OAAmBJ,EAAQ,GAC9BZ,IAAKH,EAAMI,SACXgB,OAAO,OACPZ,UAAS,gBAAAW,OAAkBH,EAAU,QAAU,GAAE,UAAAG,OAASJ,EAAQ,GAClEM,iBAAgB,wBAAAF,OAA0BH,EAAU,QAAU,KALzDD,EAML,UAtBOF,EAAAA,EAAAA,KAAA,KAAAF,SAAG,qBA2BhB,C","sources":["Components/Gallary/Images.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Images.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { projects } from \"../Portfolio/ProtfolioData\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nconst Images = () => {\r\n  const { projectId } = useParams();\r\n  const project = projects.find((proj) => proj.id === parseInt(projectId));\r\n  const [sortedImages, setSortedImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (project && project.galleryImages.length > 0) {\r\n      const imagesToLoad = project.galleryImages.length;\r\n      let loadedCount = 0;\r\n      project.galleryImages.forEach((image) => {\r\n        const img = new Image();\r\n        img.src = image.original;\r\n        img.onload = () => {\r\n          loadedCount++;\r\n          if (loadedCount === imagesToLoad) {\r\n            setSortedImages(project.galleryImages);\r\n            setLoading(false);\r\n          }\r\n        };\r\n        img.onerror = () => {\r\n          loadedCount++;\r\n          if (loadedCount === imagesToLoad) {\r\n            setSortedImages(project.galleryImages);\r\n            setLoading(false);\r\n          }\r\n        };\r\n      });\r\n    }\r\n  }, [project]);\r\n\r\n  if (!project) return <p>Project not found</p>;\r\n\r\n  return (\r\n    <div className=\"gallery-container\" style={{ marginTop: \"6rem\" }}>\r\n      <h1>\r\n        {project.title} Gallery <span className=\"yellow-line\"></span>\r\n      </h1>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-indicator\">Loading gallery...</div>\r\n      ) : (\r\n        <div className=\"grid-gallery\">\r\n          {sortedImages.map((image, index) => {\r\n            const isLarge = index === 0;\r\n            return (\r\n              <LazyLoadImage\r\n                key={index}\r\n                alt={`Gallery image ${index + 1}`}\r\n                src={image.original}\r\n                effect=\"blur\"\r\n                className={`gallery-item ${isLarge ? \"large\" : \"\"} item-${index + 1}`}\r\n                wrapperClassName={`gallery-item-wrapper ${isLarge ? \"large\" : \"\"}`}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Images;\r\n"],"names":["Images","projectId","useParams","project","projects","find","proj","id","parseInt","sortedImages","setSortedImages","useState","loading","setLoading","useEffect","galleryImages","length","imagesToLoad","loadedCount","forEach","image","img","Image","src","original","onload","onerror","_jsxs","className","style","marginTop","children","title","_jsx","map","index","isLarge","LazyLoadImage","alt","concat","effect","wrapperClassName"],"sourceRoot":""}